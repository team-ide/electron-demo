appId: com.electron.test # appid 包名
productName: 测试程序 # 安装程序的名字
copyright: 版权信息 # 版权信息
executableName: 这是可执行文件名 # 执行文件名
electronLanguages: # 指定语言 不设置则 默认所有
  - zh-CN
compression: normal # store|normal|maximum 打包压缩情况(store 相对较快)
directories:
  # app: ./
  # buildResources: ./dist
  output: ./build # 输出文件夹(不修改则默认在dist_electron下)

# 把指定的资源复制到程序 根 目录
extraFiles:
  - ./xxx


# 把指定的资源复制到程序 resources 目录
extraResources:
  - ./xxx
  - ./server
  - ./dist
  - ./assets

# 打包到asar中的文件
files:
  - "electron"
  #- "!node_modules/**/*" # !不需要打包进去的文件

asarUnpack: # 不需要打包到asar中的文件，也就是有改动的代码
  - ./xxx
# win:
#   executableName: 测试程序
#   icon: src/assets/favicon.ico # 程序图标
#   target:
#     - target: nsis # 利用nsis制作安装程序
#       arch:
#         - x64 # 64位
#         #- ia32 # 32位
        
#     #- target: portable # 单文件免安装版
#     #  arch:
#         - x64 # 64位
#     #    - ia32 # 32位
#   # requestedExecutionLevel: highestAvailable # 获取管理员权限
nsis:
  oneClick: false # 是否一键安装
  allowElevation: true # 允许请求提升。若为false，则用户必须使用提升的权限重新启动安装程序。
  allowToChangeInstallationDirectory: true # 是否允许修改安装目录
  createDesktopShortcut: true # 卸载时图标
  createStartMenuShortcut: true # 是否创建开始菜单图标
  runAfterFinish: false # 是否安装完成后运行
  artifactName: ${name}-${version}-${arch}-setup.${ext}
  installerIcon: src/assets/favicon.ico # 安装时图标(所有路径均相对根目录)
  # uninstallerIcon: # 卸载时图标
  # installerHeaderIcon: # 安装时头部图标
  # shortcutName:  # 快捷方式名称
  language: 0x0804 # 语言 https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c?redirectedfrom=MSDN
mac:
  entitlementsInherit: assets/entitlements.mac.plist
  extendInfo:
    - NSCameraUsageDescription: Application requests access to the device's camera.
    - NSMicrophoneUsageDescription: Application requests access to the device's microphone.
    - NSDocumentsFolderUsageDescription: Application requests access to the user's Documents folder.
    - NSDownloadsFolderUsageDescription: Application requests access to the user's Downloads folder.
  notarize: false
dmg:
  artifactName: ${name}-${version}.${ext}
linux:
  target:
    - AppImage
    - snap
    - deb
  maintainer: electronjs.org
  category: Utility
appImage:
  artifactName: ${name}-${version}.${ext}
npmRebuild: false
publish:
  provider: generic
  url: https://example.com/auto-updates # 程序升级的验证地址
electronDownload:
  mirror: https://npmmirror.com/mirrors/electron/
